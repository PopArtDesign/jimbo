#!/usr/bin/env bash

set -eu -o pipefail
shopt -s lastpipe nullglob

declare -rx app_name="${0##*/}"
declare -rx app_path="$(realpath "${0}")"
declare -rx app_dir="$(dirname "${app_path}")"

declare -rx app_base_path="$(realpath "${app_dir}/..")"
declare -rx app_commands_path="${app_base_path}/commands"
declare -rx app_plugins_path="${app_base_path}/plugins"
declare -rx app_libs_path="${app_base_path}/lib"
declare -rx app_libs_loader="${app_base_path}/loader.bash"

source "${app_libs_path}/command.bash"
source "${app_libs_path}/error.bash"

main() {
    local cmd

    while [[ $# -gt 0 ]]; do
        case "${1}" in
            -h | --help ) cmd='help' ;;
            -- ) shift && break ;;
            -* ) app::error::unknown_option "${1}" ;;
            * ) break
        esac

        shift
    done

    if [[ -z "${cmd:-}" ]]; then
        if [ $# -eq 0 ]; then
            app::error::missing_argument 'command. Try --help for more information.'
        fi

        cmd="${1}" && shift
    fi

    local executable="$(app::command::find_executable "${cmd}")"

    if ! [[ -f "${executable}" ]]; then
        app_unknown_command "${cmd}"
    fi

    exec "${executable}" "$@"
}

app_unknown_command() {
    local message

    printf -v message 'Unknown command: %s.\n\n%s' "${1}" "$(app::command::available_commands)"

    app::error::error "${message}"
}

main "$@"
